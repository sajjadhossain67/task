

# User Management API

This is a basic CRUD (Create, Read, Update, Delete) API built using Node.js with TypeScript and MongoDB. It manages a collection of users with their names and email addresses.

## Requirements

- Node v20.9.0
- MongoDB ^8.2.2
- npm 1.1.12 (Node Package Manager)

## Installation

1. Clone the repository:

   ```bash
   git clone https://github.com/sajjadhossain67/user-management
   ```

2. Navigate to the project directory:

   ```bash
   cd user-management-api
   ```

3. Install dependencies:

   ```bash
   npm install
   ```

4. Set up MongoDB:
   
   - Install MongoDB locally or use a cloud service like MongoDB Atlas.
   - Update the MongoDB connection URL in `src/app.ts ( mongodb://localhost:27017/user-management)` file if necessary.

## Usage

1. Start the server:

   ```bash
   npm start
   ```

2. Use Postman or a similar tool to interact with the API endpoints.

## API Endpoints

- `GET /api/users`: Get all users.
- `GET /api/users/:id`: Get a single user by ID.
- `POST /api/users`: Create a new user.
- `PUT /api/users/:id`: Update a user by ID.
- `DELETE /api/users/:id`: Delete a user by ID.

## Project Structure

```
user-management-api/
  |- src/
  |   |- app.ts          # Entry point of the application
  |   |- routes/         # Route handlers for different endpoints
  |   |- models/         # Mongoose models
  |- .gitignore          # Specifies intentionally untracked files to ignore
  |- package.json        # Project metadata and dependencies
  |- tsconfig.json       # TypeScript configuration file
  |- README.md           # Project documentation
```
